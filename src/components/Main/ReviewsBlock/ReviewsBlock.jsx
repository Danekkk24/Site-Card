import { useEffect, useRef } from 'react'
import Review from './Review'
import styles from './reviews.module.css'

export default function Reviews() {
	const containerRef = useRef(null)
	const reviewWidthRef = useRef(0)

	const reveiws = [
		<Review
			key={1}
			name='–í–ª–∞–¥–∏—Å–ª–∞–≤ –ú.'
			link='https://t.me/h1ckz'
			text='–î–∏–∑–∞–π–Ω –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π, –ø–æ–Ω—è—Ç–Ω—ã–π –∏ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è. –°–ø–∞—Å–∏–±–æ!'
		></Review>,
		<Review
			key={2}
			name='–ê–Ω–¥—Ä–µ–π –®.'
			link='https://t.me/h1ckz'
			text='–í—Å—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å –¥–∞–∂–µ –ª—É—á—à–µ, —á–µ–º —è –æ–∂–∏–¥–∞–ª! –í–∏–¥–Ω–æ, —á—Ç–æ –¥–∏–∑–∞–π–Ω–µ—Ä —Å –æ–ø—ã—Ç–æ–º.'
		></Review>,
		<Review
			key={3}
			name='–ú–∞–∫—Å–∏–º –ú.'
			link='https://t.me/h1ckz'
			text='–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥! –£—á—Ç–µ–Ω—ã –≤—Å–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è, –¥–∏–∑–∞–π–Ω ‚Äî üî•. –ü—Ä–∏—è—Ç–Ω–æ –±—ã–ª–æ —Ä–∞–±–æ—Ç–∞—Ç—å!'
		></Review>,
		<Review
			key={4}
			name='–ù–∏–∫–æ–ª–∞–π –ö.'
			link='https://t.me/h1ckz'
			text='–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª —Å –±–æ–ª—å—à–∏–º –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º. –ë—ã—Å—Ç—Ä–∞—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞.'
		></Review>,
		<Review
			key={5}
			name='–£–ª—å—è–Ω–∞ –©.'
			link='https://t.me/h1ckz'
			text='–ö—Ä—É—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ—Ä–∞–¥–æ–≤–∞–ª–æ, —á—Ç–æ –¥–∏–∑–∞–π–Ω–µ—Ä —Å–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è ‚Äî –ø—Ä—è–º –≤ —Ç–æ—á–∫—É.'
		></Review>,
	]

	const visibleReviews = 3

	const handleScroll = () => {
		const box = containerRef.current
		const width = reviewWidthRef.current * visibleReviews

		if (box.scrollLeft <= 0) {
			box.style.scrollBehavior = 'auto'
			box.scrollLeft = box.scrollWidth - 2 * width
			box.style.scrollBehavior = 'smooth'
		}
		if (box.scrollLeft >= box.scrollWidth - width) {
			box.style.scrollBehavior = 'auto'
			box.scrollLeft = width
			box.style.scrollBehavior = 'smooth'
		}
	}

	const btnPrewReview = () => {
		const box = containerRef.current
		box.scrollLeft -= reviewWidthRef.current
	}
	const btnNextReview = () => {
		const box = containerRef.current
		box.scrollLeft += reviewWidthRef.current
	}

	useEffect(() => {
		const box = containerRef.current

		requestAnimationFrame(() => {
			const firstReview = box.querySelector(`.${styles.review_card}`)

			if (!firstReview) return

			reviewWidthRef.current = firstReview.clientWidth
			const width = reviewWidthRef.current * visibleReviews

			box.scrollLeft = (box.scrollWidth - width) / 2
			box.addEventListener('scroll', handleScroll)
		})

		return () => {
			box.removeEventListener('scroll', handleScroll)
		}
	}, [])

	return (
		<section className={styles.review_block}>
			<h1>–û–¢–ó–´–í–´</h1>
			<p className={styles.description}>
				–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–æ —Å–≤–æ–∏—Ö{' '}
				<span className={styles.selecting}>–ª–∏—á–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤</span> –¢–µ–ª–µ–≥—Ä–∞–º. –í—Å—ë
				–ø—Ä–æ–∑—Ä–∞—á–Ω–æ!
				<br />
				–õ—é–±–æ–π –æ—Ç–∑—ã–≤ –º–æ–∂–Ω–æ <span className={styles.selecting}>–æ—Ç–∫—Ä—ã—Ç—å</span> –≤
				–¢–µ–ª–µ–≥—Ä–∞–º –∏ <span className={styles.selecting}>—Å–ø—Ä–æ—Å–∏—Ç—å</span> –æ–±
				–≤–ø–µ—á–∞—Ç–ª–µ–Ω—è—Ö —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π
				<br />—É —Å–æ–∑–¥–∞—Ç–µ–ª—è –æ—Ç–∑—ã–≤–∞ –ª–∏—á–Ω–æ.
			</p>
			<div className={styles.review_carousel}>
				<div className={styles.review_container} ref={containerRef}>
					{reveiws.slice(-visibleReviews)}
					{reveiws}
					{reveiws.slice(0, visibleReviews)}
				</div>
			</div>
			<div style={{ display: 'flex', justifyContent: 'center' }}>
				<div
					className={styles.next_button}
					style={{ transform: 'rotate(180deg)' }}
				>
					<p className={styles.array_next_icon} onClick={btnPrewReview} />
				</div>
				<div className={styles.next_button}>
					<p className={styles.array_next_icon} onClick={btnNextReview} />
				</div>
			</div>
		</section>
	)
}
